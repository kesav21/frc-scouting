#!/bin/env python

import json
import requests
import argparse


def main():

    # configuration
    args = get_arguments()
    api_key = get_api_key("config.json")

    # get data
    endpoints = get_endpoints(args)
    urls = get_urls(api_key, endpoints)
    events = get_events(urls)

    # print data
    for event in events:
        print(event)


def get_events(urls):
    for url in urls:
        yield from requests.get(url).json()


def get_urls(api_key, endpoints):
    for endpoint in endpoints:
        base_url = "https://www.thebluealliance.com/api/v3"
        url = f"{base_url}/{endpoint}?X-TBA-Auth-Key={api_key}"
        yield url


def get_endpoints(args):

    team = set(args.team)
    year = set(args.year)

    # given no team but year
    if team is None and year is not None:
        return (f"events/{y}/keys" for y in year)

    # given team but no year
    if team is not None and year is None:
        return (f"team/frc{t}/events/keys" for t in team)

    # given team and year
    if team is not None and year is not None:
        return (f"team/frc{t}/events/{y}/keys" for y in year for t in team)


def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("--team", "-t", nargs="*", type=int)
    parser.add_argument("--year", "-y", nargs="*", type=int)

    args = parser.parse_args()
    validate_args(args)

    return args


def validate_args(args):
    # given no arguments
    if args.team is None and args.year is None:
        parser.error("you must specify at least one argument")


def printj(data):
    print(json.dumps(data, indent=4))


def get_api_key(file):
    with open(file, "r") as f:
        return json.load(f)["api_key"]


if __name__ == "__main__":
    main()
